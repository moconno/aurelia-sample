{"version":3,"sources":["src/app.js","src/category-list.js","src/checkout.js","src/environment.js","src/game-list.js","src/main.js","src/messages.js","src/models/game.js","src/resources/index.js","src/services/CategoryService.js","src/services/GameService.js","src/resources/elements/loading-indicator.js","src/resources/elements/utility.js"],"names":["App","http","ea","utility","configureRouter","config","router","title","map","route","moduleId","name","activate","CategoryList","app","categoryService","params","routeConfig","gameId","getCategories","select","category","publish","Checkout","subscribe","msg","self","gameText","text","fetch","then","response","json","categories","data","getDate","Date","selectedCatId","id","buy","selectedCat","find","c","alert","debug","testing","GameList","gameService","created","getGames","game","configure","aurelia","use","standardConfiguration","feature","container","useStandardConfiguration","withBaseUrl","withDefaults","headers","withInterceptor","request","console","log","method","url","status","registerInstance","developmentLogging","plugin","start","setRoot","GameViewed","CategoryViewed","Game","Object","assign","gameStartDate","gameStartTime","globalResources","CategoryService","categoriesByGame","GameService","games","length","isRequesting","push","nprogress","LoadingIndicator","loadingChanged","newValue","done","moment","time","date","default","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client'\n\n@inject(HttpClient, EventAggregator)\nexport class App {\n  constructor(http, ea, utility) {\n    this.http = http;\n    this.ea = ea;\n  }\n\n  configureRouter(config, router) {\n    config.title = 'Home';\n    config.map([\n      { route: '', moduleId: 'game-list', title: 'Games' },\n      { route: 'game/:gameId/categories', moduleId: 'category-list', name: 'gameCategories', title: 'Categories', activate: true}\n    ]);\n\n    this.router = router;\n  }\n}\n","import {App} from './app';\nimport {inject} from 'aurelia-framework';\nimport {CategoryService} from './services/CategoryService'\nimport {GameViewed, CategoryViewed} from './messages';\n\n@inject(App, CategoryService)\nexport class CategoryList {\n  constructor(app, categoryService) {\n    this.app = app;\n    this.categoryService = categoryService;\n  }\n\n  activate(params, routeConfig) {\n    this.gameId = params.gameId;\n    return this.getCategories();\n  }\n\n  getCategories() {\n    return this.categoryService.getCategories(this.gameId);\n  }\n\n  select(category) {\n    this.app.ea.publish(new CategoryViewed(category));\n    return true;\n  }\n}\n","import {App} from './app';\nimport {inject} from 'aurelia-framework';\nimport {CategoryViewed} from './messages';\n\n@inject(App)\nexport class Checkout {\n  constructor(app) {\n    this.app = app;\n\n    app.ea.subscribe(CategoryViewed, msg => this.select(msg.category));\n  }\n\n  activate(params, routeConfig) {\n    var self = this;\n    this.routeConfig = routeConfig;\n    var gameId = params.gameId;\n    this.gameText = params.text;\n\n\n    return this.app.http.fetch(`v2/game/${gameId}/categories`)\n      .then(response => response.json())\n      .then(data => {\n        self.categories = data.categories;\n      });\n  }\n\n  getDate() {\n    return new Date();\n  }\n\n  select(category) {\n    this.selectedCatId = category.id;\n    return true;\n  }\n\n  buy() {\n    const selectedCat = this.categories.find((c) => c.id == this.selectedCatId);\n    alert(`Bought that ${selectedCat.name}`);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {inject} from 'aurelia-framework';\nimport {App} from './app';\nimport {GameService} from './services/GameService';\nimport { GameViewed } from './messages';\n\n@inject(App, GameService)\nexport class GameList {\n  constructor(app, gameService) {\n    this.app = app;\n    this.gameService = gameService;\n  }\n\n  created() {\n    return this.gameService.getGames();\n  }\n\n  select(game) {\n    this.app.ea.publish(new GameViewed(game));\n    return true;\n  }\n}\n","import environment from './environment';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  let container = aurelia.container\n\n  let http = new HttpClient();\n  http.configure(config => {\n    config\n    .useStandardConfiguration()\n    .withBaseUrl('https://qa-luigi.expapp.com/')\n    .withDefaults({\n      //credentials: 'same-origin',\n      headers: {\n        'X-EXP-API-KEY': 'TEG3VtfVnfLX6CmoRpox'\n        //'Content-type' : 'application/json'\n      }\n    })\n    .withInterceptor({\n      request(request) {\n        console.log(`Requesting ${request.method} ${request.url}`);\n        return request;\n      },\n      response(response) {\n        console.log(`Received ${response.status} ${response.url} ${response.data}`);\n        return response;\n      }\n    });\n  });\n\n  container.registerInstance(HttpClient, http);\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class GameViewed {\n  constructor(game) {\n    this.game = game\n  }\n}\n\nexport class CategoryViewed {\n  constructor(category) {\n    this.category = category\n  }\n}\n","import { getDate } from '../resources/elements/utility';\n\nexport class Game {\n  constructor(game) {\n    Object.assign(this, game);\n    this.gameStartDate = getDate(this.gameStartTime);\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import {inject} from 'aurelia-framework';\nimport {Factory} from 'aurelia-framework';\nimport {App} from '../app';\nimport {Game} from '../models/game'\n\n@inject(App)\nexport class CategoryService {\n  constructor(app) {\n    this.app = app;\n    this.categoriesByGame = {};\n  }\n\n  getCategories(gameId) {\n    if (this.categoriesByGame[gameId]) {\n      return this.categoriesByGame[gameId];\n    }\n\n    return this.app.http.fetch(`v2/game/${gameId}/categories`)\n      .then(response => response.json())\n      .then(data => {\n        this.categoriesByGame[gameId] = data.categories;\n        return this.categoriesByGame[gameId];\n      });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {App} from '../app';\nimport {Game} from '../models/game'\n\n@inject(App)\nexport class GameService {\n  constructor(app) {\n    this.app = app;\n    this.games = [];\n  }\n\n  getGames() {\n    if (this.games.length > 0) {\n      return this.games;\n    }\n\n    this.app.http.isRequesting = true;\n    return this.app.http.fetch('v2/game/activeGames')\n      .then(response => response.json())\n      .then(games => {\n        for(var game of games) {\n          this.games.push(new Game(game));\n        }\n        this.app.http.isRequesting = false;\n      });\n  }\n}\n","import * as nprogress from 'nprogress';\nimport {bindable, noView} from 'aurelia-framework';\n\n@noView(['nprogress/nprogress.css'])\nexport class LoadingIndicator {\n  @bindable loading = false;\n\n  loadingChanged(newValue) {\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n}\n","import * as moment from 'moment';\n\n\n\texport function getDate(time) {\n\t\tvar date = new Date(time);\n\t\treturn moment.default(time).format(\"dddd @ hh:mm a\");\n\t};\n"],"sourceRoot":".."}